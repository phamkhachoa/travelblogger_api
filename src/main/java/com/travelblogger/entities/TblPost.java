package com.travelblogger.entities;
// Generated Jul 2, 2020 11:38:06 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * TblPost generated by hbm2java
 */
@Entity
@Table(name = "tbl_post", catalog = "travelblogger")
public class TblPost implements java.io.Serializable {

	private Integer idPost;
	@ManyToOne(fetch = FetchType.LAZY)
	private TblProvince tblProvince;
	@ManyToOne(fetch = FetchType.LAZY)
	private TblTopics tblTopics;
	private String description;
	private String content;
	private String imgPost;
	private Date createDate;
	private int likes;
	private String district;
	private int idAccount;
	private String namePlace;
	private String title;
	private int activeFlag;
	@OneToMany(fetch = FetchType.LAZY)
	private Set<TblCommentPost> tblCommentPosts = new HashSet<TblCommentPost>(0);
	@OneToMany(fetch = FetchType.LAZY)
	private Set<TblLikePost> tblLikePosts = new HashSet<TblLikePost>(0);
	@OneToMany(fetch = FetchType.LAZY)
	private Set<TblSavePost> tblSavePosts = new HashSet<TblSavePost>(0);

	public TblPost() {
	}

	public TblPost(TblProvince tblProvince, TblTopics tblTopics, String description, String content, String imgPost,
			Date createDate, int likes, String district, int idAccount, String namePlace, String title,
			int activeFlag) {
		this.tblProvince = tblProvince;
		this.tblTopics = tblTopics;
		this.description = description;
		this.content = content;
		this.imgPost = imgPost;
		this.createDate = createDate;
		this.likes = likes;
		this.district = district;
		this.idAccount = idAccount;
		this.namePlace = namePlace;
		this.title = title;
		this.activeFlag = activeFlag;
	}

	public TblPost(TblProvince tblProvince, TblTopics tblTopics, String description, String content, String imgPost,
			Date createDate, int likes, String district, int idAccount, String namePlace, String title, int activeFlag,
			Set<TblCommentPost> tblCommentPosts, Set<TblLikePost> tblLikePosts, Set<TblSavePost> tblSavePosts) {
		this.tblProvince = tblProvince;
		this.tblTopics = tblTopics;
		this.description = description;
		this.content = content;
		this.imgPost = imgPost;
		this.createDate = createDate;
		this.likes = likes;
		this.district = district;
		this.idAccount = idAccount;
		this.namePlace = namePlace;
		this.title = title;
		this.activeFlag = activeFlag;
		this.tblCommentPosts = tblCommentPosts;
		this.tblLikePosts = tblLikePosts;
		this.tblSavePosts = tblSavePosts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_post", unique = true, nullable = false)
	public Integer getIdPost() {
		return this.idPost;
	}

	public void setIdPost(Integer idPost) {
		this.idPost = idPost;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_province", nullable = false)
	public TblProvince getTblProvince() {
		return this.tblProvince;
	}

	public void setTblProvince(TblProvince tblProvince) {
		this.tblProvince = tblProvince;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_topic", nullable = false)
	public TblTopics getTblTopics() {
		return this.tblTopics;
	}

	public void setTblTopics(TblTopics tblTopics) {
		this.tblTopics = tblTopics;
	}

	@Column(name = "description", nullable = false, length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "content", nullable = false, length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "img_post", nullable = false, length = 65535)
	public String getImgPost() {
		return this.imgPost;
	}

	public void setImgPost(String imgPost) {
		this.imgPost = imgPost;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "create_date", nullable = false, length = 10)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "likes", nullable = false)
	public int getLikes() {
		return this.likes;
	}

	public void setLikes(int likes) {
		this.likes = likes;
	}

	@Column(name = "district", nullable = false, length = 100)
	public String getDistrict() {
		return this.district;
	}

	public void setDistrict(String district) {
		this.district = district;
	}

	@Column(name = "id_account", nullable = false)
	public int getIdAccount() {
		return this.idAccount;
	}

	public void setIdAccount(int idAccount) {
		this.idAccount = idAccount;
	}

	@Column(name = "name_place", nullable = false, length = 100)
	public String getNamePlace() {
		return this.namePlace;
	}

	public void setNamePlace(String namePlace) {
		this.namePlace = namePlace;
	}

	@Column(name = "title", nullable = false, length = 200)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "active_flag", nullable = false)
	public int getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(int activeFlag) {
		this.activeFlag = activeFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblPost")
	public Set<TblCommentPost> getTblCommentPosts() {
		return this.tblCommentPosts;
	}

	public void setTblCommentPosts(Set<TblCommentPost> tblCommentPosts) {
		this.tblCommentPosts = tblCommentPosts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblPost")
	public Set<TblLikePost> getTblLikePosts() {
		return this.tblLikePosts;
	}

	public void setTblLikePosts(Set<TblLikePost> tblLikePosts) {
		this.tblLikePosts = tblLikePosts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblPost")
	public Set<TblSavePost> getTblSavePosts() {
		return this.tblSavePosts;
	}

	public void setTblSavePosts(Set<TblSavePost> tblSavePosts) {
		this.tblSavePosts = tblSavePosts;
	}

}
